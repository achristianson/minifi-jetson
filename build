#!/bin/bash

set -e

bazel_version="0.21.0"

# Validate environment
if ! which cmake; then
  sudo apt-get -y install cmake
fi

if ! which curl; then
  sudo apt-get -y install curl
fi

if ! which javac; then
  sudo apt-get -y install openjdk-8-jdk-headless
fi

#if ! which javac; then
#  sudo apt-get -y install openjdk-11-jdk-headless
#fi

# Install bazel
if ! which bazel; then
  if [[ ! -d "bazel-${bazel_version}-dist" ]]; then
    wget "https://github.com/bazelbuild/bazel/releases/download/${bazel_version}/bazel-${bazel_version}-dist.zip"
    unzip "bazel-${bazel_version}-dist.zip" -d bazel-${bazel_version}-dist
  fi

  cd "bazel-${bazel_version}-dist"

  if [[ ! -f "output/bazel" ]]; then
    env EXTRA_BAZEL_ARGS="--host_javabase=@local_jdk//:jdk" bash ./compile.sh
    sudo cp output/bazel /usr/local/bin/
  fi

  cd ..
fi

# Install NCCL
if [[ ! -d "/opt/nccl" ]]; then
  if [[ ! -d nccl ]]; then
    git clone https://github.com/NVIDIA/nccl.git
  fi

  cd "nccl"
  git fetch --all
  git checkout 6d8b242
  make -j src.build
  make pkg.txz.build

  nccl_pkg_txz="$( readlink -f build/pkg/txz/nccl_*.txz )"
  nccl_dir="$( echo $( basename "${nccl_pkg_txz}" ) | sed -e 's/.txz$//' )"
  sudo tar -xvf "${nccl_pkg_txz}" -C /opt
  sudo ln -sf "${nccl_dir}" "/opt/nccl"

  echo "/opt/${nccl_dir}"
  ls "/opt/${nccl_dir}"

  cd .. # nccl
fi

# Install tensorflow_cc
cd tensorflow_cc/tensorflow_cc

if [[ ! -d build ]]; then
  mkdir build
fi

cd build
export NCCL_INSTALL_PATH="/opt/nccl"
echo "Using NCCL_INSTALL_PATH: ${NCCL_INSTALL_PATH}"
cmake -DTENSORFLOW_STATIC=OFF -DTENSORFLOW_SHARED=ON ..
nice make
cd .. # build
cd .. # tensorflow_cc
