#!/bin/bash

set -e

bazel_version="0.24.1"

# Validate environment
if ! which cmake; then
  sudo apt-get -y install cmake
fi

if ! which curl; then
  sudo apt-get -y install curl
fi

if ! which javac; then
  sudo apt-get -y install openjdk-8-jdk-headless
fi

if [[ "$( free | awk '$1 == "Mem:" { print $7 }' )" -lt 8000000 ]]; then
  if [[ -z "$( free | awk '$1 == "Swap:"' )" ]]; then
    echo "Configure a swap partition or file first (8GB+ recommended)."
    exit 1
  fi
fi

# Install bazel
if ! which bazel; then
  if [[ ! -d "bazel-${bazel_version}-dist" ]]; then
    wget "https://github.com/bazelbuild/bazel/releases/download/${bazel_version}/bazel-${bazel_version}-dist.zip"
    unzip "bazel-${bazel_version}-dist.zip" -d bazel-${bazel_version}-dist
  fi

  cd "bazel-${bazel_version}-dist"

  if [[ ! -f "output/bazel" ]]; then
    env EXTRA_BAZEL_ARGS="--host_javabase=@local_jdk//:jdk" bash ./compile.sh
    sudo cp output/bazel /usr/local/bin/
  fi

  cd ..
fi

# Install NCCL
if [[ ! -e "/opt/nccl" ]]; then
  if [[ ! -d nccl ]]; then
    git clone https://github.com/NVIDIA/nccl.git
  fi

  cd "nccl"
  git fetch --all --tags
  git checkout "v2.3.7-1"
  make -j src.build
  make pkg.txz.build

  nccl_pkg_txz="$( readlink -f build/pkg/txz/nccl_*.txz )"
  nccl_dir="$( echo $( basename "${nccl_pkg_txz}" ) | sed -e 's/.txz$//' )"
  sudo tar -xvf "${nccl_pkg_txz}" -C /opt
  sudo ln -Tsf "${nccl_dir}" "/opt/nccl"

  echo "/opt/${nccl_dir}"
  ls "/opt/${nccl_dir}"

  cd .. # nccl
fi

# Install tensorflow_cc
if [[ ! -f "/usr/local/lib/tensorflow_cc/libtensorflow_cc.so" ]]; then

cd tensorflow_cc/tensorflow_cc

if [[ ! -d build ]]; then
  mkdir build
fi

# Patch to use newer TF tag which support aarch64
sed -i -e  's/v1.13.1/v2.0.0-beta1/g' CMakeLists.txt

cd build
export NCCL_INSTALL_PATH="/opt/nccl"
export CC_OPT_FLAGS="-march=native"
echo "Using NCCL_INSTALL_PATH: ${NCCL_INSTALL_PATH}"
cmake -DTENSORFLOW_STATIC=OFF -DTENSORFLOW_SHARED=ON ..

nice make
sudo make install

cd .. # build
cd .. # tensorflow_cc

fi
